{
  "_id": "RxnkTg3CqB2GwT2Y",
  "name": "Dynamic Hacking Rules",
  "content": "<h1>DYNAMIC HACKING</h1>\n<blockquote>\n<p>In a technological multiverse, digital infiltration can outclass other methods, such as brute force, easily. This article builds on the existing Starfinder rules for hacking, creating a compatible, engaging subsystem that can include an entire party. Use traditional Computers checks for simple, low-pressure situations and employ this subsystem for more interactive hacking encounters—all in the same campaign!</p>\n</blockquote>\n<h3><strong><span style=\"font-style:italic\">HACKING IN SUMMARY</span></strong></h3>\n<p><span style=\"font-style:italic\">Dynamic hacking follows these steps.</span><br style=\"font-style:italic\" /><span style=\"font-style:italic\">1. Prepare: Participants configure their personas and decide </span><span style=\"font-style:italic\">whether to be lead or support hackers before accessing </span><span style=\"font-style:italic\">the computer.</span><br style=\"font-style:italic\" /><span style=\"font-style:italic\">2. Present Obstacles: The GM lays out the initial obstacles </span><span style=\"font-style:italic\">for the PCs to overcome. Each hacker can attempt one </span><span style=\"font-style:italic\">check to assess an obstacle’s statistics.</span><br style=\"font-style:italic\" /><span style=\"font-style:italic\">3. Countdown: Reduce the countdown value for each </span><span style=\"font-style:italic\">obstacle by 1. Resolve any obstacle effects.</span><br style=\"font-style:italic\" /><span style=\"font-style:italic\">4. Hackers Act: The next phase begins. The hackers act in </span><span style=\"font-style:italic\">any order, using any of their full suite of options.</span><br style=\"font-style:italic\" /><span style=\"font-style:italic\">5. Resolve Obstacles: For any of the obstacles whose </span><span style=\"font-style:italic\">Resolve entries have been fulfilled, set those obstacles </span><span style=\"font-style:italic\">aside and apply any effects that occur when those </span><span style=\"font-style:italic\">obstacles are resolved.</span><br style=\"font-style:italic\" /><span style=\"font-style:italic\">6. Continued Hacking: After each of the hackers has had a </span><span style=\"font-style:italic\">turn, repeat steps 3–5 until the encounter ends.</span></p>\n<p><br />Hacking in the Core Rulebook is straightforward, requiring just a Computers check to access a secured system and avoid countermeasures, sometimes with an additional Computers check to overcome the occasional fake shell or firewall.</p>\n<p>Dynamic hacking involves three key differences. First, a hacking encounter spans multiple phases, during which the hacker can pursue various objectives. Second, a hacker splits their Computers skill into several specializations (Deceive, Hack, and Process), used in place of the Computers modifier during the encounter. Finally, multiple hackers can contribute to dynamic hacking—even PCs with limited technical skills.</p>\n<p>Dynamic hacking functions with existing rules and encounters with minimal adaptation. Rules and guidelines for using this system with existing character options appear on page 73.</p>\n<h2>COMPUTERS SUBSKILLS</h2>\n<p>In dynamic hacking, the Computers skill is broken into three subskills used for various tasks: Deceive, Hack, and Process. <strong>Deceive</strong> represents your ability to hide or misrepresent your identity to avoid detection, confound foes, and trick your way past safeguards. <strong>Hack</strong> represents your prowess to manipulate programs, exploit vulnerabilities, and brute-force your way into a computer’s files. <strong>Process</strong> represents your ability to identify threats and opportunities, as well as change, sustain, defend, or repair your own programs. Your modifier for each of these subskills equals your Computers skill modifier, plus any modifiers based on how you configure your hacking persona (see below).</p>\n<h2>DIGITAL PERSONA</h2>\n<p>While hacking into a computer, you navigate and manipulate its systems through a persona, which is your anchor in that digital world. The persona’s simply a bundle of code through which you act, though you can give it a sensory signature that others perceive when interacting with it. However, your persona is also a target through which others can attack you, track your location, and expel you from the digital space.</p>\n<p><strong>Persona Health:</strong> Countermeasures might attack your persona, degrading its performance or even using the persona to attack you and your equipment more directly. Your persona’s overall health is measured by Connection Points (CP), with lost CP representing damage that impairs performance and connectivity. Your digital persona has a maximum number of CP equal to 12 + 2 × your Computers ranks. You can restore lost CP with the repair action (page 72), and you replenish all lost CP when you spend 1 Resolve Point and take 10 minutes to recover Stamina Points.</p>\n<p>Your persona malfunctions as it loses CP. When your persona’s current CP is at or below 75% of its maximum, randomly select one of your three Computers subskills and apply a –2 penalty to your checks with that subskill. When your persona’s CP is at or below 50% of its maximum, apply that –2 penalty to your checks with the other two subskills. Increase the penalty to –3 when your persona’s CP falls to or below 25% of its maximum. If its CP total ever drops to 0, your persona disintegrates, and you and any support hackers linked to your persona are immediately ejected from the encounter and can’t rejoin until you’ve restored your persona’s current CP to 1 or higher.</p>\n<p><strong>Configuring a Persona:</strong> When you begin a hacking encounter, you configure your persona, assigning a circumstance modifier between –3 and +3 to each of the three subskills: Deceive, Hack, and Process. The sum of these modifiers can’t exceed your number of Computers ranks divided by 3. If you have your own computer (Core Rulebook 213), you can harness its power to enhance your persona, in which case the three circumstance modifiers’ sum above can’t exceed your computer’s tier.</p>\n<p>In addition, you decide whether your persona will act independently or will aid an allied hacker’s persona, establishing whether you are a lead hacker or support hacker.</p>\n<p><em>Lead Hacker:</em> This hacker can perform a major action and a minor action during each phase (action types appear on page 72). In turn, they are vulnerable to countermeasures’ effects. At least one lead hacker must be present to begin a hacking encounter, and any number of lead hackers can participate.</p>\n<p><em>Support Hacker: </em>This hacker’s persona is connected to that of an allied lead hacker. Support hackers are rarely affected directly by countermeasures and can make greater use of non-Computers skills, but they can perform only one minor action each turn. If their lead hacker leaves the encounter, any connected support hackers also leave the encounter.</p>\n<h2>BEGINNING AND ENDING THE ENCOUNTER</h2>\n<p>A hacking encounter begins when one or more users access a secured computer by either directly accessing the computer’s user interface (like a terminal), physically accessing a computer using a hacking kit, or attempting to break into the computer through an infosphere or similar network. Once they begin, the hackers typically work against a timer, as most countermeasures have countdowns that represent how quickly they react to intruders. The encounter continues so long as at least one hacker accesses the computer; however, a GM might end the encounter once a hacker has secured root access or resolved all countermeasures, either of which ends the encounter’s remaining threat.</p>\n<h3><strong>Hacking Phases</strong></h3>\n<p>Much like physical combat, dynamic hacking takes place in phases, during which hackers and automated defenses take turns acting within a digital space. The hackers always act first in a phase, after which the computer’s defenses resolve any of their effects. Each phase, hackers can perform an assortment of actions, including major actions that cause substantial effects and minor actions that focus more on observation, commands, and support. Any lead hacker can perform one major action and one minor action per turn, whereas a support hacker can perform only a minor action per turn.</p>\n<p><strong>Bonus Actions: </strong>At the start of their turn, a hacker can choose to perform additional actions. A lead hacker can choose to take up to three additional major actions during their turn, but they take a cumulative –5 penalty to all skill checks they attempt during their turn for each additional major action taken. A support hacker can choose to take a major action instead of a minor action by spending 1 Resolve Point.</p>\n<h2>HACKING OBJECTIVES</h2>\n<p>Objectives represent a combination of goals and obstacles that a hacker overcomes during a hacking encounter. An encounter typically begins with several objectives, and additional objectives appear over the course of the encounter. These objectives are divided into three categories based on their lead function, and sample objectives appear on page 73.</p>\n<p><strong>Countermeasures:</strong> These objectives represent deliberate defenses that pose some risk to hackers. They range from alarms and contingent computer viruses to live counterhackers attempting to stymie intruders.</p>\n<p><strong>Modules:</strong> These objectives are programs that typically have value to the hackers—and are usually the reason for hacking in the first place—such as command modules that control doors or data modules that contain valuable intelligence.</p>\n<p><strong>Nodes: </strong>These objectives are figurative branches within the computer that provide access to other objectives beyond. Reaching modules often requires traversing one or more nodes.</p>\n<h3>Objective Statistics</h3>\n<p>Objectives typically include a name, a description, and the following.</p>\n<p><strong>Check DC:</strong> This is the base DC of skill checks for interacting with this obstacle. An obstacle’s check DC equals either 15 + 1-1/2 × the encounter’s CR or 15 + 3 × the computer’s tier. Specific checks and actions often include modifiers that adjust this value.</p>\n<p><strong>Resolve: </strong>This lists the way or ways a hacker might overcome the objective. A Resolve entry lists the checks required, the number of successes required for each check, and any modifier to the base DC for those checks. For example, an obstacle with a Check DC of 18 that lists Hack (DC + 0, 2 successes) and Process (DC – 2, 1 success) as its Resolve entry requires two successful DC 18 Hack checks and one successful DC 16 Process check to overcome.</p>\n<p><strong>Support:</strong> This lists any alternate skills a hacker can use when performing the aid action to assist another hacker in overcoming the obstacle.</p>\n<p><strong>Countdown:</strong> This is a timer that triggers special conditions after a certain number of phases, listed in parentheses; some obstacles’ Countdowns are rolled randomly when the obstacle appears. At the end of each hacking phase, reduce this number by 1. If the number is ever reduced to 0, the listed effect occurs.</p>\n<p><strong>Success:</strong> This is any special effect that happens once the objective has been resolved.</p>\n<p><strong>Special: </strong>This is any additional effect the obstacle creates.</p>\n<h2>DYNAMIC HACKING ENCOUNTERS</h2>\n<p>Hacking encounters vary to reflect the hackers’ goals and the target computer’s capabilities. Each encounter includes at least one objective tied to the hacker’s goal (such as secret data to steal or a door to open), at least one countermeasure that opposes the hacker, and often, one or more nodes that create avenues the hackers must navigate toward their goals.</p>\n<p>To build an encounter, set the encounter’s Challenge Rating— which sets the encounter’s check DC (page 71)—and decide on an approximate encounter length based on the number of checks required to resolve the key objectives. A short encounter requires about 5–7 successful checks to resolve the main objectives, whereas longer encounters might require 10–15 checks. For each lead hacker involved, add enough countermeasures to increase the number of checks by 2 (for shorter encounters) or by as much as 4 for longer encounters. For each support hacker, increase the number of checks by 1.</p>\n<p>Scaling an encounter in this way need not always involve adding more countermeasures but could instead involve requiring an additional success to resolve specific objectives. This way, even if more PCs join the encounter as lead hackers than you anticipated, you can easily adjust the encounter to provide a fairly similar challenge.</p>\n<p><strong>Timed Encounters: </strong>In Starfinder, successfully accessing a system often affords the hacker time to explore at leisure. While a dynamic hack attempt might include finite countermeasures and a clear win condition, the format also supports hackers clashing with an array of defenses that multiply faster than the PCs can deactivate them. In this case, the goal becomes resolving enough countermeasures to stay safe, accomplish the mission, and escape before being overwhelmed or detected.</p>\n<h2>ADAPTING HACKING ABILITIES</h2>\n<p>The following are guidelines for adapting existing class features and character options to the dynamic hacking system.</p>\n<p><strong>Faster Hacking: </strong>An ability that reduces the time it takes to hack instead reduces the penalty a lead hacker takes when performing additional major actions to –3 per additional action.</p>\n<p><strong>Delay Countermeasures: </strong>An ability that would delay a countermeasure’s activation instead increases that countermeasure’s starting countdown value by 1.</p>\n<p><strong>Negate Countermeasures: </strong>Abilities that would negate a countermeasure entirely instead grant that character a +10 bonus to their first check to resolve the countermeasure.</p>\n<p><strong>Security:</strong> Features that increase the check DC to hack your own computer instead apply their bonus to your checks made to resist any effect that would harm your computer or persona.</p>",
  "flags": {},
  "img": "icons/svg/mystery-man.svg"
}