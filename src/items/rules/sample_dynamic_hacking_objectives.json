{
  "name": "Sample Dynamic Hacking Objectives",
  "content": "<h1>Sample Objectives</h1>\n<p>The following are common objectives, including adaptations of existing modules and countermeasures from the Core Rulebook.</p>\n<p> </p>\n<h3><span style=\"color:#ecf0f1;background-color:#000000\">BASIC COUNTERHACKER (COUNTERMEASURE)</span></h3>\n<p>This capable programmer shores up the computer’s defenses.<br /><strong>Resolve:</strong> Deceive (DC + 0, 2 successes) or Hack (DC + 2, 2 successes)<br /><strong>Countdown</strong> (3): Whenever the countdown reaches 0, the counterhacker causes two effects. First, they damage the persona of one lead hacker, causing it to lose CP equal to 2d6 + the encounter’s CR. That lead hacker can halve the CP their persona lost by succeeding at a DC + 0 Process check. Second, the counterhacker can perform one of the actions below. Afterward, roll 1d3 to determine the obstacle’s new countdown value.</p>\n<p><em>Attack:</em> Increase the Process check DC to resist the damage by 2, and treat all 1s on the damage dice as 2s.</p>\n<p><em>Infect:</em> The counterhacker infects the persona with a virus. Each phase after the hackers act, the infected persona loses CP equal to 1d6 plus half the encounter’s CR, and any computer that persona’s hacker is using takes damage equal to twice the CP lost. The virus can be removed by spending a major action and succeeding at a DC + 0 Hack check.<br /><em>Repair:</em> Choose one obstacle that hasn’t been resolved. Treat one of the checks to resolve that obstacle as though it had not been fulfilled this encounter.</p>\n<p><em>Trace: </em>The counterhacker assesses the persona’s signature and identifies where its associated hacker is located unless that hacker succeeds at a DC + 0 Deceive check.</p>\n<p> </p>\n<h3><span style=\"color:#ecf0f1;background-color:#000000\">NODE, BASIC (NODE)</span></h3>\n<p>The collection of file paths requires some effort to navigate and secure permission to restricted areas beyond.</p>\n<p><em>Resolve: </em>Hack (DC – 2, 1 success), Process (DC + 0, 1 success) Support: Perception</p>\n<p><em>Success:</em> Add the node’s linked obstacles to the encounter.</p>\n<p> </p>\n<h3><span style=\"color:#ecf0f1;background-color:#000000\">NODE, FAKE SHELL (NODE)</span></h3>\n<p>This node misleads hackers toward a falsified set of files. <em>Resolve: </em>Hack (DC – 2, 1 success), Process (DC + 0, 1 success)</p>\n<p><em>Support:</em> Perception</p>\n<p><em>Success:</em> Add the node’s linked obstacles to the encounter.</p>\n<p><em>Special:</em> If the Process check to resolve this obstacle doesn’t exceed the DC by 5 or more, the linked obstacles are convincing fakes that function as normal obstacles, but resolving them provides no benefit (e.g. seemingly valuable data is worthless, command modules can’t direct devices, etc.).</p>\n<p> </p>\n<h3><span style=\"color:#ecf0f1;background-color:#000000\">ROOT ACCESS (MODULE)</span></h3>\n<p>You secure absolute administrator privileges, allowing you to modify any of the computer’s functions with ease.</p>\n<p><em>Resolve:</em> Hack (DC + 20, 1 success), Hack (DC + 15, 1 success), Deceive (DC + 10, 1 success)</p>\n<p><em>Success:</em> You and allied hackers reduce DCs to resolve obstacles by 20 and automatically succeed at checks to analyze objectives.</p>\n<p> </p>\n<h3><span style=\"color:#ecf0f1;background-color:#000000\">SECURE DATA (MODULE)</span></h3>\n<p>This is an average-security data module with valuable contents. Large secure data modules typically require additional checks to resolve, have higher check DCs, or both.</p>\n<p><em>Resolve: </em>Hack (DC + 0, 1 success), Process (DC + 0, 1 success)</p>\n<p><em>Support:</em> Profession check related to the data</p>\n<p><em>Success:</em> Hackers can now use the modify action accompanied by specific subskill checks to delete (Hack), modify (Hack), forge (Deceive), or copy (Process) the module’s contents. As a special minor action, a hacker can study the contents with a successful DC + 0 Process check or related skill check to seek specific info or attain a basic understanding of the module’s contents.</p>\n<p> </p>\n<h3><span style=\"color:#ecf0f1;background-color:#000000\">WIPE (COUNTERMEASURE)</span></h3>\n<p>This program destroys important data.</p>\n<p><em>Resolve: </em>Deceive (DC + 0, 1 success), Hack (DC + 0, 1 success)</p>\n<p><em>Special: </em>Count the number of times hackers fail a check to resolve an obstacle while the wipe countermeasure is active. Once the count reaches 2 failures, this countermeasure begins erasing one or more other objectives, imposing a –5 penalty to resolve them. At the end of the next hacking phase, those objectives are removed from the encounter and can no longer be resolved.</p>",
  "img": "icons/svg/mystery-man.svg",
  "flags": {},
  "_id": "zq2Ef65I1u5JuM2o"
}